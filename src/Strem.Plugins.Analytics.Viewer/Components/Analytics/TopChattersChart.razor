@using Strem.Plugins.Analytics.Models.Filtering
@using Strem.Plugins.Analytics.Viewer.Queries
@using Strem.Plugins.Analytics.Viewer.Types

@inherits ChartComponent

<h3 class="title is-5 is-capitalized has-text-black">Top Chatters Chart</h3>
@{ var metrics = GenerateMetrics(); }
@if (metrics.Count == 0)
{
    <p>No Data Available</p>
}
else
{
    <ApexChart TItem="KeyedMetric" Title="Top 10 Chatters" @ref="ChartInstance" Options="ChartOptions" Width="500" Height="300">
        
        <ApexPointSeries TItem="KeyedMetric" Items="metrics" Name="Chatters"
                         SeriesType="SeriesType.Bar" ShowDataLabels="true"
                         Stroke="@(new SeriesStroke { Color = CommonFieldColours.ChatMessagesColour })"
                         XValue="@(e => e.Key)"
                         YValue="@(e => e.Value)"/>
    
    </ApexChart>
}

@code {
    
    public ApexChart<KeyedMetric> ChartInstance { get; set; }
    public ApexChartOptions<KeyedMetric> ChartOptions { get; set; } = new();
    
    public IReadOnlyCollection<KeyedMetric> GenerateMetrics(int count = 10)
    {
        return AnalyticsEventRepository
            .Query(new GetTopChattersQuery(Filter))
            .OrderByDescending(x => x.Value)
            .Take(count)
            .ToArray();
    }

    public override async Task Refresh()
    { await ChartInstance.RenderAsync(); }
}