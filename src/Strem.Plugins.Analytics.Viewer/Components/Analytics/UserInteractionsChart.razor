@using Strem.Plugins.Analytics.Types
@using Strem.Plugins.Analytics.Viewer.Models
@using Strem.Plugins.Analytics.Viewer.Queries
@using Strem.Core.Extensions
@using Strem.Plugins.Analytics.Extensions
@using Strem.Plugins.Analytics.Models.Filtering
@using Strem.Plugins.Analytics.Viewer.Types

@inherits ChartComponent

<h3 class="title is-5 is-capitalized has-text-black">User Interactions Chart</h3>
@{ var Data = GetMetrics(); }
@if (Data.Count == 0)
{
    <p>No Data Available</p>
}
else
{
    <ApexChart TItem="InteractionMetric" Title="User Interactions" @ref="ChartInstance" Options="ChartOptions" Width="500" Height="300">
    
        <ApexPointSeries TItem="InteractionMetric" Name="Chat Messages"
                         Items="Data" Stroke="@(new SeriesStroke { Width = 2, Color = CommonFieldColours.ChatMessagesColour })"
                         SeriesType="SeriesType.Line" XValue="@(e => e.Date)" YValue="@(e => e.ChatCount)" 
                         OrderBy="x => x.X"/>
        
        <ApexPointSeries TItem="InteractionMetric" Name="Users Joined"
                         Items="Data" Stroke="@(new SeriesStroke { Width = 2, Color = CommonFieldColours.Other1 })"
                         SeriesType="SeriesType.Line" XValue="@(e => e.Date)" YValue="@(e => e.UsersJoined)" 
                         OrderBy="x => x.X"/>
        
        <ApexPointSeries TItem="InteractionMetric" Name="Users Left"
                         Items="Data" Stroke="@(new SeriesStroke { Width = 2, Color = CommonFieldColours.Other2 })"
                         SeriesType="SeriesType.Line" XValue="@(e => e.Date)" YValue="@(e => e.UsersLeft)" 
                         OrderBy="x => x.X"/>
        
        
        <ApexPointSeries TItem="InteractionMetric" Name="Viewer Count" 
                         Items="Data" Stroke="@(new SeriesStroke { Width = 2, Color = CommonFieldColours.ViewerFieldColour })"
                         SeriesType="SeriesType.Line" XValue="@(e => e.Date)" YValue="@(e => e.Viewers)" 
                         OrderBy="x => x.X"/>
    
    </ApexChart>
}

@code {
    
    
    public ApexChart<InteractionMetric> ChartInstance { get; set; }
    public ApexChartOptions<InteractionMetric> ChartOptions { get; set; } = new();

    protected override void OnInitialized()
    {
        ChartOptions.Xaxis = new XAxis()
        {
            Type = XAxisType.Datetime
        };
        
        ChartOptions.Yaxis = new List<YAxis>();
        ChartOptions.Yaxis.Add(new YAxis()
        {
            Title = new AxisTitle() { Text = "User Interactions" },
            DecimalsInFloat = 0,
            SeriesName = "1",
            Show = true
        });
        
        ChartOptions.Yaxis.Add(new YAxis()
        {
            SeriesName = "1",
            Show = false,
        });
        
        ChartOptions.Yaxis.Add(new YAxis()
        {
            SeriesName = "1",
            ShowForNullSeries = false,
        });
        
        ChartOptions.Yaxis.Add(new YAxis()
        {
            Title = new AxisTitle() { Text = "Viewer Count" },
            SeriesName = "2",
            Opposite = true,
            DecimalsInFloat = 0
        });
        
        base.OnInitialized();
    }

    public IReadOnlyCollection<InteractionMetric> GetMetrics()
    {
        return AnalyticsEventRepository
            .Query(new GetUserInteractionQuery(Filter))
            .GroupBy(x => x.Date.RoundToNearest(Filter.TimeUnitRounding))
            .Select(x => new InteractionMetric(x.Key, 
                    (int)x.Average(y => y.Viewers), 
                    x.Sum(y => y.ChatCount), 
                    x.Sum(y => y.UsersJoined),
                    x.Sum(y => y.UsersLeft)
                ))
            .ToArray();
    }
    
    public override async Task Refresh()
    { await ChartInstance.RenderAsync(); }
}